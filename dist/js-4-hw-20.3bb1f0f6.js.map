{"mappings":"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","sources":["<anon>","src/main.js"],"sourcesContent":["var $2b6e161c9edcf319$exports = {};\n// Отримання постів\nasync function $2b6e161c9edcf319$var$getPosts() {\n    try {\n        const response = await fetch(\"http://localhost:3000/blog\");\n        return await response.json();\n    } catch (error) {\n        console.error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u043E\\u0442\\u0440\\u0438\\u043C\\u0430\\u043D\\u043D\\u044F \\u043F\\u043E\\u0441\\u0442\\u0456\\u0432:\", error);\n        return [];\n    }\n}\n// Рендер постів\nfunction $2b6e161c9edcf319$var$createPostsHTML(posts) {\n    return posts.map((post)=>`\n    <div class=\"post\">\n      <h2>${post.title}</h2>\n      <p><strong>\\u{410}\\u{432}\\u{442}\\u{43E}\\u{440}:</strong> ${post.blogname}</p>\n      <img src=\"${post.image}\" alt=\"${post.title}\" style=\"max-width:300px;\">\n      <div class=\"meta\">\n        <p class=\"views\">\\u{41F}\\u{435}\\u{440}\\u{435}\\u{433}\\u{43B}\\u{44F}\\u{434}\\u{438}: ${post.views}</p>\n        <p class=\"favorites\">\\u{423}\\u{43B}\\u{44E}\\u{431}\\u{43B}\\u{435}\\u{43D}\\u{435}: ${post.favorites}</p>\n        <p class=\"comments\">\\u{41A}\\u{43E}\\u{43C}\\u{435}\\u{43D}\\u{442}\\u{430}\\u{440}\\u{456}: ${post.comments}</p>\n        <p class=\"downloads\">\\u{417}\\u{430}\\u{432}\\u{430}\\u{43D}\\u{442}\\u{430}\\u{436}\\u{435}\\u{43D}\\u{43D}\\u{44F}: ${post.downloads}</p>\n      </div>\n      <div class=\"user\">\n        <img src=\"${post.userImageURL}\" alt=\"\\u{410}\\u{432}\\u{430}\\u{442}\\u{430}\\u{440}\" style=\"width:50px; height:50px; border-radius:50%;\">\n        <p>User ID: ${post.user_id}</p>\n      </div>\n      <button class=\"editPostButton\" data-id=\"${post.id}\">\\u{420}\\u{435}\\u{434}\\u{430}\\u{433}\\u{443}\\u{432}\\u{430}\\u{442}\\u{438}</button>\n      <button class=\"deletePostButton\" data-id=\"${post.id}\">\\u{412}\\u{438}\\u{434}\\u{430}\\u{43B}\\u{438}\\u{442}\\u{438}</button>\n    </div>\n  `).join(\"\");\n}\nfunction $2b6e161c9edcf319$var$renderPosts(posts) {\n    const container = document.getElementById(\"postsContainer\");\n    container.innerHTML = $2b6e161c9edcf319$var$createPostsHTML(posts);\n}\n// Створення поста\nasync function $2b6e161c9edcf319$var$createBlogApi(newBlog) {\n    const option = {\n        method: \"POST\",\n        body: JSON.stringify(newBlog),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    };\n    return await fetch(\"http://localhost:3000/blog\", option);\n}\n// Оновлення поста\nasync function $2b6e161c9edcf319$var$updatePost(id, updatedPost) {\n    try {\n        const option = {\n            method: \"PUT\",\n            body: JSON.stringify(updatedPost),\n            headers: {\n                \"Content-Type\": \"application/json; charset=UTF-8\"\n            }\n        };\n        await fetch(`http://localhost:3000/blog/${id}`, option);\n    } catch (error) {\n        console.error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u043E\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043D\\u044F \\u043F\\u043E\\u0441\\u0442\\u0430:\", error);\n    }\n}\n// Видалення поста\nasync function $2b6e161c9edcf319$var$deletePost(id) {\n    try {\n        const response = await fetch(`http://localhost:3000/blog/${id}`, {\n            method: \"DELETE\"\n        });\n        if (!response.ok) throw new Error(`\\u{41F}\\u{43E}\\u{43C}\\u{438}\\u{43B}\\u{43A}\\u{430} \\u{432}\\u{438}\\u{434}\\u{430}\\u{43B}\\u{435}\\u{43D}\\u{43D}\\u{44F} \\u{43F}\\u{43E}\\u{441}\\u{442}\\u{430} \\u{437} id ${id}. \\u{421}\\u{442}\\u{430}\\u{442}\\u{443}\\u{441}: ${response.status}`);\n        console.log(`\\u{41F}\\u{43E}\\u{441}\\u{442} \\u{437} id ${id} \\u{443}\\u{441}\\u{43F}\\u{456}\\u{448}\\u{43D}\\u{43E} \\u{432}\\u{438}\\u{434}\\u{430}\\u{43B}\\u{435}\\u{43D}\\u{43E}`);\n        return true;\n    } catch (error) {\n        console.error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u0432\\u0438\\u0434\\u0430\\u043B\\u0435\\u043D\\u043D\\u044F \\u043F\\u043E\\u0441\\u0442\\u0430:\", error);\n        return false;\n    }\n}\n// Старт застосунку\nasync function $2b6e161c9edcf319$var$startApp() {\n    const posts = await $2b6e161c9edcf319$var$getPosts();\n    $2b6e161c9edcf319$var$renderPosts(posts);\n}\n$2b6e161c9edcf319$var$startApp();\n// Обробка форми створення\nconst $2b6e161c9edcf319$var$form = document.getElementById(\"createPostForm\");\n$2b6e161c9edcf319$var$form.addEventListener(\"submit\", async (e)=>{\n    e.preventDefault();\n    const newBlog = {\n        title: document.getElementById(\"titleInput\").value.trim(),\n        blogname: document.getElementById(\"blognameInput\").value.trim(),\n        image: document.getElementById(\"imageInput\").value.trim(),\n        userImageURL: document.getElementById(\"avatarInput\").value.trim(),\n        views: Number(document.getElementById(\"viewsInput\").value),\n        favorites: Number(document.getElementById(\"favoritesInput\").value),\n        downloads: Number(document.getElementById(\"downloadsInput\").value),\n        comments: Number(document.getElementById(\"commentsInput\").value),\n        user_id: Number(document.getElementById(\"userIdInput\").value)\n    };\n    await $2b6e161c9edcf319$var$createBlogApi(newBlog);\n    $2b6e161c9edcf319$var$form.reset();\n    $2b6e161c9edcf319$var$startApp();\n});\n// Обробка кнопок (редагування / видалення)\ndocument.addEventListener(\"click\", async (e)=>{\n    const target = e.target;\n    // Редагування\n    if (target.classList.contains(\"editPostButton\")) {\n        const id = target.dataset.id;\n        const postDiv = target.parentElement;\n        const updatedPost = {\n            title: prompt(\"\\u041D\\u043E\\u0432\\u0438\\u0439 \\u0437\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A:\", postDiv.querySelector(\"h2\").textContent),\n            blogname: prompt(\"\\u0406\\u043C\\u2019\\u044F \\u0430\\u0432\\u0442\\u043E\\u0440\\u0430:\", postDiv.querySelector(\"p\").textContent.split(\":\")[1].trim()),\n            image: prompt(\"URL \\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F:\", postDiv.querySelector(\"img\").src),\n            userImageURL: prompt(\"URL \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\\u043A\\u0438:\", postDiv.querySelector(\".user img\").src),\n            views: Number(prompt(\"\\u041F\\u0435\\u0440\\u0435\\u0433\\u043B\\u044F\\u0434\\u0438:\", postDiv.querySelector(\".views\").textContent.replace(/\\D/g, \"\"))),\n            favorites: Number(prompt(\"\\u0423\\u043B\\u044E\\u0431\\u043B\\u0435\\u043D\\u0435:\", postDiv.querySelector(\".favorites\").textContent.replace(/\\D/g, \"\"))),\n            comments: Number(prompt(\"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0456:\", postDiv.querySelector(\".comments\").textContent.replace(/\\D/g, \"\"))),\n            downloads: Number(prompt(\"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F:\", postDiv.querySelector(\".downloads\").textContent.replace(/\\D/g, \"\"))),\n            user_id: Number(prompt(\"ID \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0430:\", postDiv.querySelector(\".user p\").textContent.replace(/\\D/g, \"\")))\n        };\n        if (updatedPost.title) {\n            await $2b6e161c9edcf319$var$updatePost(id, updatedPost);\n            $2b6e161c9edcf319$var$startApp();\n        }\n    }\n    // Видалення\n    if (target.classList.contains(\"deletePostButton\")) {\n        const id = target.dataset.id;\n        await $2b6e161c9edcf319$var$deletePost(id);\n        $2b6e161c9edcf319$var$startApp();\n    }\n});\n\n\n//# sourceMappingURL=js-4-hw-20.3bb1f0f6.js.map\n","// Отримання постів\nasync function getPosts() {\n  try {\n    const response = await fetch(\"http://localhost:3000/blog\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Помилка отримання постів:\", error);\n    return [];\n  }\n}\n\n// Рендер постів\nfunction createPostsHTML(posts) {\n  return posts\n    .map(\n      (post) => `\n    <div class=\"post\">\n      <h2>${post.title}</h2>\n      <p><strong>Автор:</strong> ${post.blogname}</p>\n      <img src=\"${post.image}\" alt=\"${post.title}\" style=\"max-width:300px;\">\n      <div class=\"meta\">\n        <p class=\"views\">Перегляди: ${post.views}</p>\n        <p class=\"favorites\">Улюблене: ${post.favorites}</p>\n        <p class=\"comments\">Коментарі: ${post.comments}</p>\n        <p class=\"downloads\">Завантаження: ${post.downloads}</p>\n      </div>\n      <div class=\"user\">\n        <img src=\"${post.userImageURL}\" alt=\"Аватар\" style=\"width:50px; height:50px; border-radius:50%;\">\n        <p>User ID: ${post.user_id}</p>\n      </div>\n      <button class=\"editPostButton\" data-id=\"${post.id}\">Редагувати</button>\n      <button class=\"deletePostButton\" data-id=\"${post.id}\">Видалити</button>\n    </div>\n  `\n    )\n    .join(\"\");\n}\n\nfunction renderPosts(posts) {\n  const container = document.getElementById(\"postsContainer\");\n  container.innerHTML = createPostsHTML(posts);\n}\n\n// Створення поста\nasync function createBlogApi(newBlog) {\n  const option = {\n    method: \"POST\",\n    body: JSON.stringify(newBlog),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n  };\n  return await fetch(\"http://localhost:3000/blog\", option);\n}\n\n// Оновлення поста\nasync function updatePost(id, updatedPost) {\n  try {\n    const option = {\n      method: \"PUT\",\n      body: JSON.stringify(updatedPost),\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n      },\n    };\n    await fetch(`http://localhost:3000/blog/${id}`, option);\n  } catch (error) {\n    console.error(\"Помилка оновлення поста:\", error);\n  }\n}\n\n// Видалення поста\nasync function deletePost(id) {\n  try {\n    const response = await fetch(`http://localhost:3000/blog/${id}`, {\n      method: \"DELETE\",\n    });\n\n    if (!response.ok) {\n      throw new Error(\n        `Помилка видалення поста з id ${id}. Статус: ${response.status}`\n      );\n    }\n\n    console.log(`Пост з id ${id} успішно видалено`);\n    return true;\n  } catch (error) {\n    console.error(\"Помилка видалення поста:\", error);\n    return false;\n  }\n}\n\n// Старт застосунку\nasync function startApp() {\n  const posts = await getPosts();\n  renderPosts(posts);\n}\n\nstartApp();\n\n// Обробка форми створення\nconst form = document.getElementById(\"createPostForm\");\n\nform.addEventListener(\"submit\", async (e) => {\n  e.preventDefault();\n\n  const newBlog = {\n    title: document.getElementById(\"titleInput\").value.trim(),\n    blogname: document.getElementById(\"blognameInput\").value.trim(),\n    image: document.getElementById(\"imageInput\").value.trim(),\n    userImageURL: document.getElementById(\"avatarInput\").value.trim(),\n    views: Number(document.getElementById(\"viewsInput\").value),\n    favorites: Number(document.getElementById(\"favoritesInput\").value),\n    downloads: Number(document.getElementById(\"downloadsInput\").value),\n    comments: Number(document.getElementById(\"commentsInput\").value),\n    user_id: Number(document.getElementById(\"userIdInput\").value),\n  };\n\n  await createBlogApi(newBlog);\n  form.reset();\n  startApp();\n});\n\n// Обробка кнопок (редагування / видалення)\ndocument.addEventListener(\"click\", async (e) => {\n  const target = e.target;\n\n  // Редагування\n  if (target.classList.contains(\"editPostButton\")) {\n    const id = target.dataset.id;\n    const postDiv = target.parentElement;\n\n    const updatedPost = {\n      title: prompt(\n        \"Новий заголовок:\",\n        postDiv.querySelector(\"h2\").textContent\n      ),\n      blogname: prompt(\n        \"Ім’я автора:\",\n        postDiv.querySelector(\"p\").textContent.split(\":\")[1].trim()\n      ),\n      image: prompt(\"URL зображення:\", postDiv.querySelector(\"img\").src),\n      userImageURL: prompt(\n        \"URL аватарки:\",\n        postDiv.querySelector(\".user img\").src\n      ),\n      views: Number(\n        prompt(\n          \"Перегляди:\",\n          postDiv.querySelector(\".views\").textContent.replace(/\\D/g, \"\")\n        )\n      ),\n      favorites: Number(\n        prompt(\n          \"Улюблене:\",\n          postDiv.querySelector(\".favorites\").textContent.replace(/\\D/g, \"\")\n        )\n      ),\n      comments: Number(\n        prompt(\n          \"Коментарі:\",\n          postDiv.querySelector(\".comments\").textContent.replace(/\\D/g, \"\")\n        )\n      ),\n      downloads: Number(\n        prompt(\n          \"Завантаження:\",\n          postDiv.querySelector(\".downloads\").textContent.replace(/\\D/g, \"\")\n        )\n      ),\n      user_id: Number(\n        prompt(\n          \"ID користувача:\",\n          postDiv.querySelector(\".user p\").textContent.replace(/\\D/g, \"\")\n        )\n      ),\n    };\n\n    if (updatedPost.title) {\n      await updatePost(id, updatedPost);\n      startApp();\n    }\n  }\n\n  // Видалення\n  if (target.classList.contains(\"deletePostButton\")) {\n    const id = target.dataset.id;\n    await deletePost(id);\n    startApp();\n  }\n});\n"],"names":["$2b6e161c9edcf319$var$getPosts","response","fetch","json","error","console","$2b6e161c9edcf319$var$createBlogApi","newBlog","option","method","body","JSON","stringify","headers","$2b6e161c9edcf319$var$updatePost","id","updatedPost","$2b6e161c9edcf319$var$deletePost","ok","Error","status","log","$2b6e161c9edcf319$var$startApp","posts","container","document","getElementById","innerHTML","map","post","title","blogname","image","views","favorites","comments","downloads","userImageURL","user_id","join","$2b6e161c9edcf319$var$form","addEventListener","e","preventDefault","value","trim","Number","reset","target","classList","contains","dataset","postDiv","parentElement","prompt","querySelector","textContent","split","src","replace"],"version":3,"file":"js-4-hw-20.3bb1f0f6.js.map"}